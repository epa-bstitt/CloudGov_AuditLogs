name: Cloud.gov Audit Logs Export

on:
  schedule:
    - cron: '0 0 * * MON'  # Run every Monday at midnight
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: read
  actions: write  # Needed for artifact upload

jobs:
  export-audit-logs:
    runs-on: ubuntu-latest
    environment: production  # Use production environment for secrets
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        cache: 'pip'  # Enable pip caching
    
    - name: Install cf CLI
      run: |
        # Add Cloud Foundry repository
        wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
        echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
        
        # Update and install CF CLI
        sudo apt-get update
        sudo apt-get install -y cf8-cli
        
        # Verify installation
        cf --version
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run audit log export
      env:
        CF_USERNAME: ${{ secrets.CLOUDGOV_USERNAME }}
        CF_PASSWORD: ${{ secrets.CLOUDGOV_PASSWORD }}
      run: |
        # Add error handling
        python scripts/export_audit_logs.py
        if [ $? -ne 0 ]; then
          echo "Error: Failed to export audit logs"
          exit 1
        fi
    
    - name: Upload CSV artifact
      if: success()  # Only run if previous steps succeeded
      uses: actions/upload-artifact@v3
      with:
        name: audit-logs-${{ github.run_number }}
        path: exports/*.csv
        retention-days: 30  # Keep artifacts for 30 days
    
    - name: Cleanup
      if: always()  # Run cleanup even if previous steps failed
      run: |
        # Remove any sensitive files
        rm -rf exports/*.csv
